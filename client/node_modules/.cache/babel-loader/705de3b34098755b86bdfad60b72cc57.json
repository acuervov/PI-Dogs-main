{"ast":null,"code":"var _jsxFileName = \"/Users/mac/Desktop/Henrry/PI-Dogs-main/client/src/components/Form/index.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport Nav from \"../Navbar\";\nimport './index.css';\nimport { temperamentos, postDog } from \"../../actions\";\nimport { connect } from \"react-redux\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Form(props) {\n  _s();\n\n  const [state, setSate] = React.useState({\n    nombre: \"\",\n    altura: \"\",\n    peso: \"\",\n    añosVida: \"\",\n    origen: \"\",\n    temps: []\n  });\n\n  function handleSubmit() {\n    if (!validate(state)) props.post(state);\n    setSate({\n      nombre: \"\",\n      altura: \"\",\n      peso: \"\",\n      añosVida: \"\",\n      temps: []\n    });\n  }\n\n  React.useEffect(() => {\n    if (props.Temperamentos.length === 0) props.temp();\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Crea tu propia raza de perrito\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Nombre*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Nombre\",\n      value: state.nombre,\n      onChange: event => {\n        setSate({ ...state,\n          nombre: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Altura*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Altura\",\n      value: state.altura,\n      onChange: event => {\n        setSate({ ...state,\n          altura: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"Peso*\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Peso\",\n      value: state.peso,\n      onChange: event => {\n        setSate({ ...state,\n          peso: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      children: \"A\\xF1os de vida\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"A\\xF1os de vida\",\n      value: state.añosVida,\n      onChange: event => {\n        setSate({ ...state,\n          añosVida: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: state.origen,\n      onChange: event => {\n        setSate({ ...state,\n          origen: event.target.value\n        });\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Nav\",\n      children: [\"Temperamentos\", /*#__PURE__*/_jsxDEV(\"ul\", {\n        id: \"lista\",\n        children: props.Temperamentos.map(temp => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"temps\",\n              onClick: () => {\n                setSate({ ...state,\n                  temps: state.temps.concat(temp.id)\n                });\n              },\n              children: temp.temperamento\n            }, temp.id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 20\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 61\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 12\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      id: \"boton\",\n      onClick: handleSubmit,\n      children: \"Enviar\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 12\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Form, \"5/NsZR5zfYJlqF8rkKYIA8Mn3BE=\");\n\n_c = Form;\n\nconst mapStateToProps = state => {\n  return {\n    Temperamentos: state.temperamentos\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    temp: () => dispatch(temperamentos()),\n    post: data => {\n      dispatch(postDog(data));\n    }\n  };\n};\n\nexport function validate(input) {\n  let errors = false;\n\n  if (!input.nombre) {\n    alert('Name is required');\n    errors = true;\n  } else if (!/^[A-Za-z0-9]+$/g.test(input.nombre)) {\n    alert('Name is invalid');\n    errors = true;\n  }\n\n  if (!input.altura) {\n    alert('altura is required');\n    errors = true;\n  } else if (!/^[A-Za-z0-9]+$/g.test(input.alutra)) {\n    alert('altura is invalid');\n    errors = true;\n  }\n\n  if (!input.peso) {\n    alert('peso is required');\n    errors = true;\n  } else if (!/^[A-Za-z0-9]+$/g.test(input.peso)) {\n    alert('peso is invalid');\n    errors = true;\n  }\n\n  return errors;\n}\n;\nexport default connect(mapStateToProps, mapDispatchToProps)(Form);\n\nvar _c;\n\n$RefreshReg$(_c, \"Form\");","map":{"version":3,"sources":["/Users/mac/Desktop/Henrry/PI-Dogs-main/client/src/components/Form/index.js"],"names":["React","Nav","temperamentos","postDog","connect","Form","props","state","setSate","useState","nombre","altura","peso","añosVida","origen","temps","handleSubmit","validate","post","useEffect","Temperamentos","length","temp","event","target","value","map","concat","id","temperamento","mapStateToProps","mapDispatchToProps","dispatch","data","input","errors","alert","test","alutra"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport Nav from \"../Navbar\";\nimport './index.css'\nimport { temperamentos, postDog} from \"../../actions\";\nimport { connect } from \"react-redux\";\n\nexport  function Form (props){\n    const [state, setSate] = React.useState({\n        nombre: \"\", \n        altura: \"\", \n        peso: \"\",\n        añosVida: \"\", \n        origen: \"\",\n        temps: [], \n    })\nfunction handleSubmit(){\n    if (!validate(state)) props.post(state); \n    \n    setSate({ \n    nombre: \"\", \n    altura: \"\", \n    peso: \"\",\n    añosVida: \"\", \n    temps: [], })\n}\n    \nReact.useEffect(()=>\n{\n   if (props.Temperamentos.length === 0) props.temp(); \n\n})\n    return (\n        <div className='form'>\n           <Nav/>\n           <h2>Crea tu propia raza de perrito</h2>\n           <span>Nombre*</span>\n           <input type=\"text\" placeholder=\"Nombre\" value={state.nombre} onChange={event => {setSate({...state, nombre: event.target.value})}}></input>\n           <span>Altura*</span>\n           <input type=\"text\" placeholder=\"Altura\" value={state.altura} onChange={event => {setSate({...state, altura: event.target.value})}}></input>\n           <span>Peso*</span>\n           <input type=\"text\" placeholder=\"Peso\" value={state.peso} onChange={event => {setSate({...state, peso: event.target.value})}}></input>\n           <span>Años de vida</span>\n           <input type=\"text\" placeholder=\"Años de vida\" value={state.añosVida} onChange={event => {setSate({...state, añosVida: event.target.value})}}></input>\n           <input type=\"text\" value={state.origen} onChange={event => {setSate({...state, origen: event.target.value})}}/>\n           <div className=\"Nav\">Temperamentos \n               <ul id=\"lista\">\n                   {props.Temperamentos.map(temp => {return <li>\n                   <button className=\"temps\" key={temp.id} onClick={()=>{setSate({...state, temps: state.temps.concat(temp.id)})}}>{temp.temperamento}</button>\n                   </li>\n                   })}\n               </ul>\n           </div>\n           <button type= \"submit\" id=\"boton\" onClick={handleSubmit}>Enviar</button>\n        </div>\n    )\n}\n\nconst mapStateToProps = state => {\n    return {\n        Temperamentos: state.temperamentos,\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        temp: () => dispatch(temperamentos()),\n        post: (data) => {dispatch(postDog(data))}\n    }\n}\nexport function validate(input) {\n    let errors = false \n    if (!input.nombre) {\n        alert('Name is required')\n      errors = true; \n    } else if (!/^[A-Za-z0-9]+$/g.test(input.nombre)) {\n        alert('Name is invalid')\n        errors = true; \n    }\n    \n\n    if (!input.altura) {\n        alert('altura is required')\n      errors = true\n    } else if (!/^[A-Za-z0-9]+$/g.test(input.alutra)) {\n        alert('altura is invalid')\n        errors = true; \n    }\n\n    if (!input.peso) {\n        alert('peso is required')\n      errors = true\n    } else if (!/^[A-Za-z0-9]+$/g.test(input.peso)) {\n        alert('peso is invalid')\n        errors = true; \n    }\n    return errors;\n  };\n\nexport default connect (mapStateToProps,mapDispatchToProps)(Form)"]},"metadata":{},"sourceType":"module"}