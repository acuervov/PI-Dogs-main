{"ast":null,"code":"import { GET_DOGS, NAME_ORDER, PESO_ORDER, SEARCH } from '../constants';\nexport function getDogs() {\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/home/dogs\", {\n      \"method\": \"GET\"\n    }).then(response => response.json()).then(json => dispatch({\n      type: GET_DOGS,\n      payload: json\n    }));\n  };\n}\nexport function orderName() {\n  return function (dispatch) {\n    dispatch({\n      type: NAME_ORDER\n    });\n  };\n}\nexport function orderPeso(arreglo) {\n  return function (dispatch) {\n    var arregla = [];\n    var arreglu = [];\n    arreglo.map(item => {\n      if (item.hasOwnProperty(\"weight\")) arreglu.push(item);\n    });\n    arreglu.map(item => {\n      if (item.weight.hasOwnProperty(\"metric\")) arregla.push(item);\n    });\n    arregla.map(dog => {\n      var num = dog.weight.metric.slice(-2);\n      num = parseInt(num);\n      dog.weight = num;\n\n      function compare(a, b) {\n        if (a.weight < b.weight) {\n          return -1;\n        }\n\n        if (a.weight > b.weight) {\n          return 1;\n        }\n\n        return 0;\n      }\n\n      arregla.sort(compare);\n    });\n    dispatch({\n      type: PESO_ORDER,\n      payload: arregla\n    });\n  };\n}\nexport function search(dogName) {\n  return function (dispatch) {\n    fetch(\"http://localhost:3001/home/dogs/name-\" + dogName, {\n      \"method\": \"GET\"\n    }).then(response => response.json()).then(json => {\n      console.log(json);\n      dispatch({\n        type: SEARCH,\n        payload: json\n      });\n    });\n  };\n}","map":{"version":3,"sources":["/Users/mac/Desktop/Henrry/PI-Dogs-main/client/src/actions/index.js"],"names":["GET_DOGS","NAME_ORDER","PESO_ORDER","SEARCH","getDogs","dispatch","fetch","then","response","json","type","payload","orderName","orderPeso","arreglo","arregla","arreglu","map","item","hasOwnProperty","push","weight","dog","num","metric","slice","parseInt","compare","a","b","sort","search","dogName","console","log"],"mappings":"AAAA,SAAQA,QAAR,EAAkBC,UAAlB,EAA6BC,UAA7B,EAAyCC,MAAzC,QAAsD,cAAtD;AAEA,OAAO,SAASC,OAAT,GAAmB;AACxB,SAAO,UAAUC,QAAV,EAAmB;AACxBC,IAAAA,KAAK,CAAC,iCAAD,EAAoC;AACvC,gBAAU;AAD6B,KAApC,CAAL,CAGCC,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIME,IAAI,IAAIJ,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAEV,QAAP;AAAiBW,MAAAA,OAAO,EAAEF;AAA1B,KAAD,CAJtB;AAMD,GAPD;AAQD;AAED,OAAO,SAASG,SAAT,GAAoB;AACzB,SAAO,UAAUP,QAAV,EAAmB;AACxBA,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAET;AAAP,KAAD,CAAR;AACD,GAFD;AAGD;AAED,OAAO,SAASY,SAAT,CAAmBC,OAAnB,EAA2B;AAChC,SAAO,UAAUT,QAAV,EAAmB;AACxB,QAAIU,OAAO,GAAG,EAAd;AACA,QAAIC,OAAO,GAAG,EAAd;AACAF,IAAAA,OAAO,CAACG,GAAR,CAAYC,IAAI,IAAG;AAAC,UAAGA,IAAI,CAACC,cAAL,CAAoB,QAApB,CAAH,EAAiCH,OAAO,CAACI,IAAR,CAAaF,IAAb;AAAmB,KAAxE;AACAF,IAAAA,OAAO,CAACC,GAAR,CAAYC,IAAI,IAAG;AAAC,UAAGA,IAAI,CAACG,MAAL,CAAYF,cAAZ,CAA2B,QAA3B,CAAH,EAAwCJ,OAAO,CAACK,IAAR,CAAaF,IAAb;AAAmB,KAA/E;AACAH,IAAAA,OAAO,CAACE,GAAR,CAAYK,GAAG,IAAI;AACjB,UAAIC,GAAG,GAAID,GAAG,CAACD,MAAJ,CAAWG,MAAX,CAAkBC,KAAlB,CAAwB,CAAC,CAAzB,CAAX;AACAF,MAAAA,GAAG,GAAGG,QAAQ,CAACH,GAAD,CAAd;AACAD,MAAAA,GAAG,CAACD,MAAJ,GAAaE,GAAb;;AACA,eAASI,OAAT,CAAkBC,CAAlB,EAAqBC,CAArB,EAAyB;AAC3B,YAAKD,CAAC,CAACP,MAAF,GAAWQ,CAAC,CAACR,MAAlB,EAA0B;AACxB,iBAAO,CAAC,CAAR;AACD;;AACD,YAAIO,CAAC,CAACP,MAAF,GAAWQ,CAAC,CAACR,MAAjB,EAAyB;AACvB,iBAAO,CAAP;AACD;;AACD,eAAO,CAAP;AACD;;AACDN,MAAAA,OAAO,CAACe,IAAR,CAAaH,OAAb;AACK,KAdH;AAeAtB,IAAAA,QAAQ,CAAC;AAACK,MAAAA,IAAI,EAAER,UAAP;AAAmBS,MAAAA,OAAO,EAAEI;AAA5B,KAAD,CAAR;AACD,GArBD;AAsBD;AAED,OAAO,SAASgB,MAAT,CAAiBC,OAAjB,EAAyB;AAC9B,SAAO,UAAU3B,QAAV,EAAmB;AACxBC,IAAAA,KAAK,CAAE,0CAAyC0B,OAA3C,EAAsD;AACzD,gBAAU;AAD+C,KAAtD,CAAL,CAGCzB,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIME,IAAI,IAAI;AAACwB,MAAAA,OAAO,CAACC,GAAR,CAAYzB,IAAZ;AAAmBJ,MAAAA,QAAQ,CAAC;AAACK,QAAAA,IAAI,EAAEP,MAAP;AAAeQ,QAAAA,OAAO,EAAEF;AAAxB,OAAD,CAAR;AAAwC,KAJ1E;AAKD,GAND;AAOD","sourcesContent":["import {GET_DOGS, NAME_ORDER,PESO_ORDER, SEARCH} from '../constants'\n\nexport function getDogs (){\n  return function (dispatch){\n    fetch(\"http://localhost:3001/home/dogs\", {\n      \"method\": \"GET\",\n    })\n    .then(response => response.json())\n    .then(json => dispatch({type: GET_DOGS, payload: json})); \n\n  }\n}\n\nexport function orderName(){\n  return function (dispatch){\n    dispatch({type: NAME_ORDER})\n  }\n}\n\nexport function orderPeso(arreglo){\n  return function (dispatch){\n    var arregla = []; \n    var arreglu = [];\n    arreglo.map(item =>{if(item.hasOwnProperty(\"weight\"))arreglu.push(item)})\n    arreglu.map(item =>{if(item.weight.hasOwnProperty(\"metric\"))arregla.push(item)})\n    arregla.map(dog => {\n      var num =  dog.weight.metric.slice(-2); \n      num = parseInt(num);  \n      dog.weight = num\n      function compare( a, b ) {\n    if ( a.weight < b.weight ){\n      return -1;\n    }\n    if (a.weight > b.weight ){\n      return 1;\n    }\n    return 0;\n  }\n  arregla.sort(compare)\n      })\n    dispatch({type: PESO_ORDER, payload: arregla})\n  }\n}\n\nexport function search (dogName){\n  return function (dispatch){\n    fetch((\"http://localhost:3001/home/dogs/name-\"+(dogName)), {\n      \"method\": \"GET\",\n    })\n    .then(response => response.json())\n    .then(json => {console.log(json); dispatch({type: SEARCH, payload: json})});\n  }\n}\n"]},"metadata":{},"sourceType":"module"}